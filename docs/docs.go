// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "github.com/jeancarlosdanese/go-base-api/blob/main/LICENSE",
        "contact": {
            "name": "Go Base API Support",
            "url": "github.com/jeancarlosdanese/go-base-api"
        },
        "license": {
            "name": "MIT",
            "url": "github.com/jeancarlosdanese/go-base-api/blob/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Loga um usuário usando email e senha",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Loga um usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email do Usuário",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Senha do Usuário",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token gerado com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro de autenticação",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "description": "Renova o token usando o refreshToken",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Renova o token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Refresh Token",
                        "name": "refreshToken",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token renovado com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Erro de autenticação",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tenants": {
            "get": {
                "description": "Busca todos os Tenants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenants"
                ],
                "summary": "Busca todos os Tenants",
                "responses": {
                    "200": {
                        "description": "Lista de Tenants",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.Tenant"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Adiciona um novo Tenant ao sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenants"
                ],
                "summary": "Cria um novo Tenant",
                "parameters": [
                    {
                        "description": "Informações do Tenant",
                        "name": "tenant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.Tenant"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Tenant Criado",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.Tenant"
                        }
                    },
                    "400": {
                        "description": "Erro de Formato de Solicitação",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/tenants/{id}": {
            "get": {
                "description": "Busca Tenant por ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenants"
                ],
                "summary": "Busca Tenant por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tenant",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.Tenant"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Tenant not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Atualiza um Tenant existente com base no ID fornecido",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenants"
                ],
                "summary": "Atualiza um Tenant existente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do Tenant",
                        "name": "tenant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.Tenant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tenant Atualizado",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.Tenant"
                        }
                    },
                    "400": {
                        "description": "ID Inválido ou Erro de Formato de Solicitação",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Exclui um Tenant com base no ID fornecido",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenants"
                ],
                "summary": "Exclui um Tenant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mensagem de sucesso",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "ID Inválido",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Atualiza parcialmente um Tenant existente com base no ID fornecido",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenants"
                ],
                "summary": "Atualiza parcialmente um Tenant existente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados atualizáveis do Tenant",
                        "name": "tenant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.Tenant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mensagem de sucesso",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "ID Inválido ou Erro de Formato de Solicitação",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "description": "Busca todos os Users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Busca todos os Users",
                "responses": {
                    "200": {
                        "description": "Lista de Users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Adiciona um novo User ao sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Cria um novo User",
                "parameters": [
                    {
                        "description": "Informações do User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User Criado",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.User"
                        }
                    },
                    "400": {
                        "description": "Erro de Formato de Solicitação",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "description": "Busca User por ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Busca User por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Atualiza um User existente com base no ID fornecido",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Atualiza um User existente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Atualizado",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.User"
                        }
                    },
                    "400": {
                        "description": "ID Inválido ou Erro de Formato de Solicitação",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Exclui um User com base no ID fornecido",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Exclui um User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mensagem de sucesso",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "ID Inválido",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Atualiza parcialmente um User existente com base no ID fornecido",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Atualiza parcialmente um User existente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados atualizáveis do User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mensagem de sucesso",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "ID Inválido ou Erro de Formato de Solicitação",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        },
        "github_com_jeancarlosdanese_go-base-api_internal_domain_enums.PersonType": {
            "type": "string",
            "enum": [
                "FISICA",
                "JURIDICA"
            ],
            "x-enum-varnames": [
                "Fisica",
                "Juridica"
            ]
        },
        "github_com_jeancarlosdanese_go-base-api_internal_domain_enums.StatusType": {
            "type": "string",
            "enum": [
                "ATIVO",
                "INATIVO"
            ],
            "x-enum-varnames": [
                "Ativo",
                "Inativo"
            ]
        },
        "github_com_jeancarlosdanese_go-base-api_internal_domain_models.Endpoint": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "Nome do recurso, único e não nulo",
                    "type": "string"
                }
            }
        },
        "github_com_jeancarlosdanese_go-base-api_internal_domain_models.HTTPError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_jeancarlosdanese_go-base-api_internal_domain_models.PolicyRole": {
            "type": "object",
            "required": [
                "actions",
                "endpoint_id",
                "role_id"
            ],
            "properties": {
                "actions": {
                    "type": "string"
                },
                "endpoint": {
                    "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.Endpoint"
                },
                "endpoint_id": {
                    "type": "integer"
                },
                "role": {
                    "description": "// constraints",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.Role"
                        }
                    ]
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_jeancarlosdanese_go-base-api_internal_domain_models.PolicyUser": {
            "type": "object",
            "required": [
                "actions",
                "endpoint_id",
                "user_id"
            ],
            "properties": {
                "actions": {
                    "type": "string"
                },
                "endpoint": {
                    "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.Endpoint"
                },
                "endpoint_id": {
                    "type": "integer"
                },
                "user": {
                    "description": "// constraints",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.User"
                        }
                    ]
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "github_com_jeancarlosdanese_go-base-api_internal_domain_models.Role": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "Nome do recurso, único e não nulo",
                    "type": "string"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.PolicyRole"
                    }
                }
            }
        },
        "github_com_jeancarlosdanese_go-base-api_internal_domain_models.Tenant": {
            "type": "object",
            "required": [
                "name",
                "status",
                "type"
            ],
            "properties": {
                "allowed_origins": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "cell_phone": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "cpf_cnpj": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ie": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_enums.StatusType"
                },
                "street": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_enums.PersonType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_jeancarlosdanese_go-base-api_internal_domain_models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.PolicyUser"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.Role"
                    }
                },
                "tenant": {
                    "description": "constraints",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_jeancarlosdanese_go-base-api_internal_domain_models.Tenant"
                        }
                    ]
                },
                "thumbnail": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_jeancarlosdanese_go-base-api_internal_domain_models.UserCreate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.3",
	Host:             "localhost:5001",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger Go Base API",
	Description:      "This is a Go Base API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
